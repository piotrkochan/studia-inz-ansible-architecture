---

# - name: "Create language dir symlink"
#   file:
#     src: "/usr/share/percona-server"
#     dest: "/usr/share/mysql"
#     state: "link"

- name: Configure mysqld
  template:
    src: mysqld.cnf.j2
    dest: /etc/percona-xtradb-cluster.conf.d/mysqld.cnf
  register: mysql_service

- name: Configure wsresp
  template:
    src: wsrep.cnf.j2
    dest: /etc/percona-xtradb-cluster.conf.d/wsrep.cnf
  register: mysql_service

- block:
  - name: Bootstrap first server
    service:
      name: "mysql@bootstrap.service"
      state: started
    run_once: true
  - name: Create tmp dir
    file:
      path: /tmp/mysql
      state: directory
    delegate_to: 127.0.0.1
    become: no

  - shell: (cd /var/lib/mysql; find . -maxdepth 1 -name "*.pem") | cut -d'/' -f2
    register: files_to_copy
    run_once: true

  - fetch: src=/var/lib/mysql/{{ item }} dest=/tmp/mysql/
    with_items: "{{ files_to_copy.stdout_lines }}"
    flat: yes
    run_once: true

  - name: Upload keys
    copy:
      src: /tmp/mysql
      dest: /var/lib/mysql/
      mode: 0644
      validate_checksum: no
    when: ansible_play_hosts_all[1:] != ansible_play_batch

  - name: Start percona on the remaining hosts
    service:
      name: mysql
      state: started
    when: ansible_play_hosts_all[1:] != ansible_play_batch

  - name: Stop bootstrapping
    service:
      name: "mysql@bootstrap.service"
      state: started
    run_once: true
    
  - name: Start percona again
    service:
      name: mysql
      state: started


# - name: "Ensure that percona is running and enabled"
#   service:
#     name: "mysql"
#     state: "started"
#     enabled: "yes"
#   when: ansible_play_hosts_all[1:] != ansible_play_batch
#   register: mysql_service

# # This service restart is needed when changing default percona__mysql_datadir, mysql_native_password
# # and other settings. So better restart when the my.cnf file changes
# # Restart when my.cnf has changed and it has not been restarted by the above task
# - name: "Restart mysql to apply changes done in my.cnf file"
#   service:
#     name: "mysql"
#     state: "restarted"
#   when:
#     - config_file.changed
#     - mysql_service is defined
#     - not mysql_service.changed
