jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  systemMessage: "<h2>Jenkins Piotr Kochan</h2><p>To jest <strong>automatycznie</strong> wygenerowana instancja Jenkinsa.</p>"
  numExecutors: {{ numExecutors | default(2) }}
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "{{ jenkins_admin_username }}"
          password: "{{ jenkins_admin_password }}"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
jobs:
  - script: >
      multibranchPipelineJob('configuration-as-code') {
        branchSources {
          git {
            id = 'configuration-as-code'
            remote('https://git-codecommit.eu-central-1.amazonaws.com/v1/repos/ansible-repository')
            credentialsId('git_repository_ssh_key')
          }
        }
      }
  - script: >
      organizationFolder('My-project') {
        displayName('AWS CodeCommit Projects')
        configure { node ->

            def traits = node / navigators / 'com.jenkins.plugins.awscodecommit.navigator.AWSCodeCommitSCMNavigator' / traits
            traits << 'jenkins.plugins.git.traits.BranchDiscoveryTrait' {
                plugin 'git@4.14.3'
            }
            
            node / navigators / 'com.jenkins.plugins.awscodecommit.navigator.AWSCodeCommitSCMNavigator' {
                plugin 'aws-codecommit-jobs@0.3.0'
                awsCodeCommitURL 'https://codecommit.eu-central-1.amazonaws.com'
                pattern 'application-(.*)'
                awsCredentialsId ''
                codeCommitCredentialsId 'git_repository_ssh_key'
            }

        }
      }

{# jobs:
  - script: >
    multibranchPipelineJob('example-2') {
      branchSources {
        branchSource {
          source {
            git {
              remote('https://git-codecommit.eu-central-1.amazonaws.com/v1/repos/ansible-repository')
              credentialsId('git_repository_ssh_key')
            }
          }
          strategy {
            namedExceptionsBranchPropertyStrategy {          
              defaultProperties {
                noTriggerBranchProperty()
                ansicolor('xterm')
              }
              namedExceptions {
                named {
                  name('jenkins-ignore')
                }
              }
            }
          }
        }
      }
    } #}