jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  systemMessage: "<h2>Jenkins Piotr Kochan</h2><p>To jest <strong>automatycznie</strong> wygenerowana instancja Jenkinsa.</p>"
  numExecutors: {{ numExecutors | default(2) }}
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "{{ jenkins_admin_username }}"
          password: "{{ jenkins_admin_password }}"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
jobs:
  - script: >
      multibranchPipelineJob('ansible-playbooks') {
        displayName('Ansible - infrastruktura')
        triggers {
          cron('H/1 * * * *')
        }
        projectFactories {
          workflowMultiBranchProjectFactory {
              scriptPath 'Jenkinsfile'
          }
        }
        orphanedItemStrategy {
          discardOldItems {
            daysToKeep(-1)
            numToKeep(-1)
          }
        }
        branchSources {
          git {
            remote('{{ ansible_repository_url }}')
            credentialsId('git_repository_ssh_key')
          }
        }
      }
  - script: >
      organizationFolder('applications') {
        displayName('Projekty aplikacji')
        triggers {
          cron('H/5 * * * *')
        }
        projectFactories {
          workflowMultiBranchProjectFactory {
              scriptPath 'Jenkinsfile'
          }
        }
        orphanedItemStrategy {
          discardOldItems {
            daysToKeep(-1)
            numToKeep(-1)
          }
        }
        configure { node ->
          node / navigators << 'com.jenkins.plugins.awscodecommit.navigator.AWSCodeCommitSCMNavigator' (plugin: 'aws-codecommit-jobs@0.3.0') {
            awsCodeCommitURL '{{ repository_url }}'
            pattern 'application-(.*)'
            awsCredentialsId ''
            codeCommitCredentialsId 'git_repository_ssh_key'
          }
          def codeCommitNav = node / navigators / 'com.jenkins.plugins.awscodecommit.navigator.AWSCodeCommitSCMNavigator'
          def x = codeCommitNav << traits (class: 'java.util.Collections$UnmodifiableRandomAccessList', 'resolves-to': 'java.util.Collections$UnmodifiableList') {
            c (class: 'list') {
              'jenkins.plugins.git.traits.BranchDiscoveryTrait' (plugin: "git@4.14.3") {}
            }
          }
        }
      }

{# jobs:
  - script: >
    multibranchPipelineJob('example-2') {
      branchSources {
        branchSource {
          source {
            git {
              remote('https://git-codecommit.eu-central-1.amazonaws.com/v1/repos/ansible-repository')
              credentialsId('git_repository_ssh_key')
            }
          }
          strategy {
            namedExceptionsBranchPropertyStrategy {          
              defaultProperties {
                noTriggerBranchProperty()
                ansicolor('xterm')
              }
              namedExceptions {
                named {
                  name('jenkins-ignore')
                }
              }
            }
          }
        }
      }
    } #}